version: "3.9"

services:

  # *******************************************
  #     Nginx Service Container
  # *******************************************
  nginx:
    container_name: ${CONTAINER_PREFIX:-docker}-nginx
    
    restart: always
    
    build:
      context: .docker
      dockerfile: nginx.dockerfile

    volumes:
      - "./.docker/nginx/conf.d:/etc/nginx/conf.d"
      - "./.docker/nginx/logs:/var/log/nginx"
      - "${PUBLIC_ROOT_PATH:-./html}:/var/www/html"

    ports:
      - "${NGINX_FORWARD_SSL_PORT:-443}:443"
      - "${NGINX_FORWARD_HOST_PORT:-80}:80"
    
    depends_on:
      - php
      - mysql

    external_links:
      # Programming Language Containers
      - "${CONTAINER_PREFIX:-docker}-php:php"
      - "${CONTAINER_PREFIX:-docker}-mysql:mysql"
    
    networks:
      - DevServer

  # *******************************************
  #     PHP FPM Service Container
  # *******************************************
  php:
    container_name: ${CONTAINER_PREFIX:-docker}-php

    restart: unless-stopped

    build:
      context: .docker
      dockerfile: php.dockerfile
    
    volumes:
      - "${PUBLIC_ROOT_PATH:-./html}:/var/www/html"

    ports:
      - "9000:9000"

    networks:
      - DevServer

  # *******************************************
  #     MYSQL Service Container
  # *******************************************
  mysql:
    container_name: ${CONTAINER_PREFIX:-docker}-mysql

    restart: unless-stopped

    build:
      context: .docker
      dockerfile: mysql.dockerfile

    ports:
      - "${MYSQL_FORWARD_DB_PORT:-3306}:3306"

    volumes:
      - "./.docker/mysql/data:/var/lib/mysql"
      - "./.docker/mysql/conf.d:/etc/mysql/conf.d"

    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}

    networks:
      - DevServer


  # *******************************************
  #     REDIS Service Container
  # *******************************************
  redis:
    container_name: ${CONTAINER_PREFIX:-docker}-redis
    
    build:
      context: .docker
      dockerfile: redis.dockerfile

    restart: unless-stopped

    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"

    volumes:
      - "./.docker/redis/data:/data"

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    
    networks:
      - DevServer


networks:
    DevServer:
        driver: bridge
