version: "3.9"

services:

  nginx:
    container_name: ${CONTAINER_PREFIX:-docker}-nginx

    restart: always

    build:
      context: .docker/nginx
      dockerfile: Dockerfile

    volumes:
      - "./.docker/nginx/logs:/var/log/nginx"
      - "./.docker/nginx/conf.d:/etc/nginx/conf.d"
      - "./.docker/nginx/ssl:/etc/nginx/ssl"
      - "${PUBLIC_ROOT_PATH:-./html}:/var/www/html"

    ports:
      - "${NGINX_FORWARD_HOST_PORT:-80}:80"
      - "${NGINX_FORWARD_SSL_PORT:-443}:443"

    depends_on:
      - docker_php
      - docker_mysql
      - docker_redis

    external_links:
      # Programming Language Containers
      - "${CONTAINER_PREFIX:-docker}-php:docker_php"
      - "${CONTAINER_PREFIX:-docker}-php-71:docker_php_71"
      - "${CONTAINER_PREFIX:-docker}-mysql:docker_mysql"
      - "${CONTAINER_PREFIX:-docker}-redis:docker_redis"

    networks:
      - WebServer

  php_latest:
    container_name: ${CONTAINER_PREFIX:-docker}-php

    restart: unless-stopped

    build:
      context: .docker/php/latest
      dockerfile: Dockerfile

    volumes:
      - "${PUBLIC_ROOT_PATH:-./html}:/var/www/html"

    ports:
      - "9000:9000"

    networks:
      - WebServer

  php_71:
    container_name: ${CONTAINER_PREFIX:-docker}-php-71

    restart: always

    build:
      context: .docker/php/7.1
      dockerfile: Dockerfile

    volumes:
      - "${PUBLIC_ROOT_PATH:-./html}:/var/www/html"

    ports:
      - "9001:9000"

    networks:
      - WebServer

  mysql_latest:
    container_name: ${CONTAINER_PREFIX:-docker}-mysql

    restart: unless-stopped

    build:
      context: .docker/mysql/latest
      dockerfile: Dockerfile

    command: --default-authentication-plugin=mysql_native_password

    ports:
      - "${MYSQL_FORWARD_DB_PORT:-3306}:3306"

    volumes:
      - "./.docker/mysql/conf.d:/etc/mysql/conf.d"
      - mysql:/var/lib/mysql

    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}

    networks:
      - WebServer

  postgresql_latest:
    container_name: "${CONTAINER_PREFIX:-docker}-postgresql"

    build:
      context: .docker/postgresql/latest
      dockerfile: Dockerfile

    restart: unless-stopped

    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"

    volumes:
      - postgresql:/var/lib/postgresql/data

    ports:
      - "${PGSQL_FORWARD_DB_PORT:-5432}:5432"

  redis_latest:
    container_name: ${CONTAINER_PREFIX:-docker}-redis

    build:
      context: .docker/redis/latest
      dockerfile: Dockerfile

    restart: unless-stopped

    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"

    volumes:
      - redis:/data

    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

    networks:
      - WebServer

networks:
  WebServer:
    driver: "${NETWORKS:-bridge}"

volumes:
  postgresql:
  mysql:
  redis:
